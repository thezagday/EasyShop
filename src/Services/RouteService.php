<?php

namespace App\Services;

use App\Entity\ShopCategory;
use Doctrine\ORM\EntityManagerInterface;
use Fisharebest\Algorithm\Dijkstra;

class RouteService
{
    public function __construct(
        protected EntityManagerInterface $em
    ) {
    }

    public function getRoute(string $source, string $destination): array
    {
        $paths = (new Dijkstra($this->getGraph()))->shortestPaths($source, $destination);
        $path = $paths[0];
        $shopToCoordinates = $this->em->getRepository(ShopCategory::class)->getShopToCoordinatesByPath($path);

        // Order is important
        $result = [];
        foreach ($path as $category) {
            foreach ($shopToCoordinates as $shopToCoordinate) {
                if ($shopToCoordinate->getCategory()->getTitle() == $category) {
                    $result[] = $shopToCoordinate;
                }
            }
        }

        return $result;
    }

    protected function getGraph(): array
    {
        return [
            'Бакалея' => [
                'Соки и воды' => 1,
                'Молочные продукты' => 1,
            ],
            'Соки и воды' => [
                'Бакалея' => 1,
                'Мясо и колбасы' => 1,
                'Детские товары' => 1,
            ],
            'Мясо и колбасы' => [
                'Соки и воды' => 1,
                'Рыба и морепродукты' => 1,
                'Детские игрушки' => 1,
            ],
            'Рыба и морепродукты' => [
                'Мясо и колбасы' => 1,
                'Товары для животных' => 1,
            ],
            'Молочные продукты' => [
                'Бакалея' => 1,
                'Детские товары' => 1,
                'Кондитерские изделия' => 1,
            ],
            'Детские товары' => [
                'Молочные продукты' => 1,
                'Соки и воды' => 1,
                'Детские игрушки' => 1,
                'Хозяйственные товары' => 1,
            ],
            'Детские игрушки' => [
                'Детские товары' => 1,
                'Мясо и колбасы' => 1,
                'Товары для животных' => 1,
                'Полуфабрикаты' => 1,
            ],
            'Товары для животных' => [
                'Рыба и морепродукты' => 1,
                'Детские игрушки' => 1,
                'Косметика и гигиена' => 1,
            ],
            'Кондитерские изделия' => [
                'Молочные продукты' => 1,
                'Хозяйственные товары' => 1,
                'Посуда' => 1
            ],
            'Хозяйственные товары' => [
                'Кондитерские изделия' => 1,
                'Детские товары' => 1,
                'Полуфабрикаты' => 1,
                'Детское питание' => 1,
            ],
            'Полуфабрикаты' => [
                'Детские игрушки' => 1,
                'Хозяйственные товары' => 1,
                'Косметика и гигиена' => 1,
                'Товары для дома' => 1,
            ],
            'Косметика и гигиена' => [
                'Полуфабрикаты' => 1,
                'Товары для животных' => 1,
                'Автотовары' => 1,
            ],
            'Посуда' => [
                'Кондитерские изделия' => 1,
                'Детское питание' => 1,
            ],
            'Детское питание' => [
                'Посуда' => 1,
                'Хозяйственные товары' => 1,
                'Товары для дома' => 1,
            ],
            'Товары для дома' => [
                'Детское питание' => 1,
                'Полуфабрикаты' => 1,
                'Автотовары' => 1,
            ],
            'Автотовары' => [
                'Товары для дома' => 1,
                'Косметика и гигиена' => 1,
            ],
            'Сезонные товары' => [],
            'Одежда' => [],
        ];
    }
}